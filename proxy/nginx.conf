user  root;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    # default_type  application/octet-stream;
    # resolver 127.0.0.11 ipv6=off;
    # client_max_body_size 100M;

    # map $http_upgrade $connection_upgrade {
    #     default upgrade;
    #     ''      close;
    # }
    # upstream hello_django {
    #     server scrna_web:8000;
    # }

    upstream uwsgicluster {
        server scrna_web:8000; # use TCP
        # server unix:/app/app.sock; # for a file socket
    }

    server {
        listen         8080;
        client_max_body_size 75M;

        location /static {
            alias /vol/static;
        }

        location /scrna {
            uwsgi_pass uwsgicluster;
            uwsgi_param SCRIPT_NAME /scrna;
            include /etc/nginx/uwsgi_params;
        }

    #     location / {
    #         uwsgi_pass unix:/app/app.sock;
    #         uwsgi_param SCRIPT_NAME /app;
            
    #         # uwsgi_modifier1 30;
    #         include /etc/nginx/uwsgi_params;
    #    }  
    #     location /be {
    #         rewrite /be/(.+) /$1 break;
    #         include /etc/nginx/uwsgi_params;
    #         uwsgi_pass unix:/app/app.sock;

    #     }

    #     location ~ /upload(/.*) {
    #         include /etc/nginx/uwsgi_params;
    #         uwsgi_pass unix:/app/app.sock;
    #         uwsgi_param PATH_INFO "$1";
    #     }


        # location /myapp/ {
        #     uwsgi_pass unix:/app/app.sock;
        #     proxy_set_header SCRIPT_NAME /myapp;
        #     proxy_redirect /myapp/ /myapp/;
        #     proxy_redirect / /myapp/;
        #     location /myapp/static/ {
        #         root /var/www; # files are deployed to /var/www/myapp/static
        #     }
        # }

    }

}



 
